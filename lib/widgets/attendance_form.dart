// lib/Widgets/attendance_form.dart
import 'package:attendanceapp/Models/attendance_model.dart';
import 'package:attendanceapp/Models/course_model.dart';
import 'package:cloud_firestore/cloud_firestore.dart';
import 'package:flutter/material.dart';

class AttendanceFormDialog extends StatefulWidget {
  final CourseModel course;
  final String studentId;
  final String studentName;
  final Function(AttendanceModel) onSubmit;

  const AttendanceFormDialog({
    Key? key,
    required this.course,
    required this.studentId,
    required this.studentName,
    required this.onSubmit,
  }) : super(key: key);

  @override
  _AttendanceFormDialogState createState() => _AttendanceFormDialogState();
}

class _AttendanceFormDialogState extends State<AttendanceFormDialog> {
  final emailController = TextEditingController();
  final locationController = TextEditingController();
  final commentController = TextEditingController();
  final studentNameController = TextEditingController();
  final registrationNumberController = TextEditingController();

  @override
  void initState() {
    super.initState();
    // Pre-fill some information
    emailController.text =
        '${widget.studentName}@example.com'; // Replace with actual student email if available
  }

  @override
  void dispose() {
    emailController.dispose();
    locationController.dispose();
    commentController.dispose();
    super.dispose();
  }

  @override
  Widget build(BuildContext context) {
    return AlertDialog(
      title: const Text('Submit Attendance'),
      content: SizedBox(
        width: double.maxFinite,
        child: SingleChildScrollView(
          child: Column(
            mainAxisSize: MainAxisSize.min,
            crossAxisAlignment: CrossAxisAlignment.start,
            children: [
              Text('Course: ${widget.course.name}',
                  style: const TextStyle(fontWeight: FontWeight.bold)),
              Text('Course Code: ${widget.course.courseCode}'),
              Text('Lecturer: ${widget.course.lecturerName}'),
              const SizedBox(height: 16),
              TextField(
                controller: emailController,
                decoration: const InputDecoration(
                  labelText: 'Email',
                  border: OutlineInputBorder(),
                ),
                keyboardType: TextInputType.emailAddress,
              ),
              const SizedBox(
                height: 16,
              ),
              TextField(
                controller: studentNameController,
                decoration: const InputDecoration(
                  labelText: 'Name',
                  border: OutlineInputBorder(),
                ),
              ),
              const SizedBox(height: 16),
              TextField(
                controller: registrationNumberController,
                decoration: const InputDecoration(
                  labelText: 'Registration number ',
                  border: OutlineInputBorder(),
                ),
              ),
              const SizedBox(height: 16),
              TextField(
                controller: locationController,
                decoration: const InputDecoration(
                  labelText: 'Location',
                  border: OutlineInputBorder(),
                ),
              ),
              const SizedBox(height: 16),
              TextField(
                controller: commentController,
                decoration: const InputDecoration(
                  labelText: 'Comment (Optional)',
                  border: OutlineInputBorder(),
                ),
                maxLines: 2,
              ),
            ],
          ),
        ),
      ),
      actions: [
        TextButton(
          onPressed: () => Navigator.pop(context),
          child: const Text('Cancel'),
        ),
        ElevatedButton(
          onPressed: () {
            // Create attendance model
            final attendance = AttendanceModel(
              id: '', // This will be generated by Firestore
              unitId: widget.course.id, // Use courseId as unitId for now
              unitName: widget.course.name, // Use course name as unit name
              studentId: widget.studentId,
              studentName: widget.studentName,
              courseName: widget.course.name,
              lecturerId: widget.course.lecturerId,
              venue: locationController.text,
              attendanceDate: Timestamp.now(),
              status: AttendanceStatus.pending,
              studentComments: commentController.text,
              studentEmail: emailController.text,
              registrationNumber: registrationNumberController.text
            );

            widget.onSubmit(attendance);
          },
          child: const Text('Submit Attendance'),
        ),
      ],
    );
  }
}
